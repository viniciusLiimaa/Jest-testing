"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toEqualIgnoringWhitespace = toEqualIgnoringWhitespace;

var _jestMatcherUtils = require("jest-matcher-utils");

var _predicate = _interopRequireDefault(require("./predicate"));

var _printUtil = require("./print-util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const passMessage = expected => () => (0, _jestMatcherUtils.matcherHint)('.not.toEqualIgnoringWhitespace') + '\n\n' + 'Expected values to not be equal while ignoring white-space (using ===):\n' + `Expected: not  ${(0, _jestMatcherUtils.EXPECTED_COLOR)(expected)}\n\n`;

const failMessage = diff => () => (0, _jestMatcherUtils.matcherHint)('.toEqualIgnoringWhitespace') + '\n\n' + 'Expected values to be equal while ignoring white-space (using ===):\n' + `Expected:\n  ${(0, _printUtil.printExpected)(diff)}\n\n` + `Received:\n  ${(0, _printUtil.printReceived)(diff)}`;

function toEqualIgnoringWhitespace(received, expected) {
  const {
    pass,
    diff
  } = (0, _predicate.default)(received, expected);
  return {
    pass: pass,
    message: pass ? passMessage(expected) : failMessage(diff),
    actual: received
  };
}